# set to true with H2; Does seem to enter in conflict when used along spring.jpa.hibernate.ddl-auto=create (with MySQL)
# spring.jpa.generate-ddl=true
# set to create with H2; set to create and then none with MySql once tables are created
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# MySQL Server CE 8.0.21
# This is the extreme permission variant but minimal rights shall be given to the user prior to connecting: grant all on mds.* to 'springuser'@'%';
spring.datasource.url=jdbc:mysql://localhost:3306/mdsx?serverTimezone=UTC
spring.datasource.username=springuser
spring.datasource.password=GoGoPass321!

server.port=9898

#show sql statement
logging.level.org.hibernate.SQL=debug
#show sql values
logging.level.org.hibernate.type.descriptor.sql=trace

#Keycloak Properties
keycloak.auth-server-url=http://localhost:8180/auth
keycloak.realm=mds
keycloak.resource=angular-app
keycloak.public-client=true
keycloak.principal-attribute=preferred_username
keycloak.enabled=true
keycloakx.realm=master
keycloakx.username=palemire
keycloakx.password=cremePoff666
keycloakx.clientId=admin-cli

# SSL
# server.ssl.enabled=false
# server.ssl.key-store-type=PKCS12
# server.ssl.key-alias=mdsEcoCert
# server.ssl.key-store=/data/tls/mdsEcoCert.pkcs12
# server.ssl.key-store-password=nicetry

# cache
user.cache.clear.init.delay=#{60*1000*10}
user.cache.clear.recurrent.delay=#{60*1000*10}