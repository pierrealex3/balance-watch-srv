swagger: "2.0"
info:
  description: "Transaction Templates API"
  title: "Balance Watch: Transactions Templates API"
  version: "1.0.0"
basePath: "/watch"

paths:
  /frequencies/{id}:
    get:
      tags:
        - "frequencies"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Frequency"

  /frequencies:
    get:
      tags:
        - "frequencies"
      produces:
        - "application/json"
      parameters:
        - name: "account"
          in: query
          required: false
          type: string
      responses:
        200:
          description: "success"
          schema:
            type: array
            items:
              $ref: "#/definitions/FrequencyWrapper"
        404:
          description: "No transaction frequency found"
    post:
      tags:
        - "frequencies"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Frequency"
      responses:
        201:
          description: "Success"
          headers:
            X-Internal-Id:
              type: "integer"
              format: "int64"
              description: "Internal ID used by the database"
        405:
          description: "Invalid input"
    put:
      tags:
        - "frequencies"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Frequency"
      responses:
        405:
          description: "Invalid input"

  /transactionsTemplates:
    get:
      tags:
        - "transaction templates"
      produces:
        - "application/json"
      parameters:
        - name: "account"
          in: "query"
          required: true
          type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TTWrapperRes"
        400:
          description: "Invalid account supplied"
        404:
          description: "No transactions templates found"
  /transactionsTemplates/{id}:
    put:
      tags:
        - "transaction templates"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/TTReq"
      responses:
        405:
          description: "Invalid input"
  /transactionTemplateGroups:
    get:
      tags:
        - "transaction template groups"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "account"
          in: "query"
          required: true
          type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TTGroupWrapper"
        400:
          description: "Invalid account supplied"
        404:
          description: "No transaction template groups found"
    post:
      tags:
        - "transaction template groups"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/TTGroup"
      responses:
        201:
          description: "Success"
          headers:
            X-Internal-Id:
              type: "integer"
              format: "int64"
              description: "Internal ID used by the database"
        405:
          description: "Invalid input"
  /transactionTemplateGroups/{id}:
    put:
      tags:
        - "transaction template groups"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: integer
          format: int64
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/TTGroup"
      responses:
        405:
          description: "Invalid input"
  /transactionTemplateGroups/{id}/templates:
    get:
      tags:
        - "transaction templates"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TTWrapperRes"
        400:
          description: "Invalid account supplied"
        404:
          description: "No transaction templates found"
    post:
      tags:
        - "transaction templates"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: integer
          format: int64
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/TTReq"
      responses:
        201:
          description: "Success"
          headers:
            X-Internal-Id:
              type: "integer"
              format: "int64"
              description: "Internal ID used by the database"
        405:
          description: "Invalid input"
definitions:
  TTGroupWrapper:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: "Internal ID used by the database"
      data:
        $ref: '#/definitions/TTGroup'
  TTGroup:
    type: object
    properties:
      description:
        type: string
      account:
        type: string
  TTWrapperReq:
    type: "object"
    required:
      - id
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Internal ID used by the database"
      data:
        $ref: "#/definitions/TTReq"
  TTWrapperRes:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: "Internal ID used by the database"
      data:
        $ref: "#/definitions/TTRes"
  TTRes:
    allOf:
      - $ref: "#/definitions/TTReq"
      - type: object
        properties:
          frequencies:
            type: array
            items:
              $ref: "#/definitions/Frequency"
  TTReq:
    type: object
    required:
      - type
      - amount
      - way
      - frequencies
      - account
    properties:
      type:
        type: string
      amount:
        type: number
        format: currency
      way:
        enum:
          - DEBIT
          - CREDIT
      frequencies:
        type: array
        minItems: 1
        items:
          type: integer
          format: int64
      spans:
        type: array
        items:
          $ref: "#/definitions/Span"
      reminderTemplate:
        $ref: "#/definitions/ReminderTemplate"
      account:
        type: string
      accountConnection:
        type: string
      note:
        type: string
  Span:
    type: object
    description: "active|inactive indicator"
    properties:
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
  FrequencyWrapper:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: "Internal ID used by the database"
      data:
        $ref: "#/definitions/Frequency"
  Frequency:
    type: object
    description: "Transaction frequency descriptor"
    properties:
      algoTag:
        type: string
      algoSpec:
        type: string
      description:
        type: string
      refDateRequired:
        type: boolean
  ReminderTemplate:
    type: object
    description: "Reminder with a delay and email"
    properties:
      timeBefore:
        type: integer
        format: int64
        description: "delay before reminder (seconds)"
        minimum: 60
      email:
        type: string
        format: email
