swagger: "2.0"
info:
  description: "User Account API"
  title: "Balance Watch: Users and Accounts API"
  version: "1.0.0"
basePath: "/watch"

paths:
  /users/{userId}/accounts:
    get:
      tags:
        - "accounts"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: string
          format: string
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AccountWrapper"
        404:
          description: "No accounts found for specified user"
    post:
      tags:
        - "accounts"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: string
          format: string
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Account"
      responses:
        201:
          description: "Success"
          headers:
            X-Internal-Id:
              type: "integer"
              format: "int64"
              description: "Internal ID used by the database"
        405:
          description: "Invalid input"

  /accounts/{accountId}:
    put:
      tags:
        - "accounts"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: accountId
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Account"
      responses:
        405:
          description: "Invalid input"
    get:
      tags:
        - "accounts"
      produces:
        - "application/json"
      parameters:
        - name: "accountId"
          in: "path"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AccountWrapper"
        404:
          description: "No accounts found for specified id"
  /users/{userId}:
    get:
      tags:
        - "users"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: string
          format: string
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "No user found with specified id"
  /users:
    post:
      tags:
        - "users"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "Success"
          headers:
            X-Internal-Id:
              type: "integer"
              format: "int64"
              description: "Internal ID used by the database"
        405:
          description: "Invalid input"
        409:
          description: "User already exists"
    get:
      summary: Returns the users that are part of the same group as the authenticated user.  "group_admin" role is required.
      tags:
        - users
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        403:
          description: \"group_admin\" role is required
  /accounts:
    get:
      summary: Returns all accounts associated to the group of the authenticated user.  "group_admin" role is required.
      tags:
        - accounts
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/AccountWrapper'
        403:
          description: \"group_admin\" role is required
  /users/{userId}/accounts/{accountId}/rights:
    get:
      summary: Returns the account rights for the specified user and account.  "group_admin" role is required if the specified user is not the authenticated user.
      tags:
        - users
        - accounts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          format: string
        - name: accountId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/UserAccountRights'

definitions:
  User:
    type: object
    properties:
      id:
        type: string
  AccountWrapper:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: "Internal ID used by the database"
      data:
        $ref: '#/definitions/Account'
  Account:
    type: object
    properties:
      accountNumber:
        type: string
      desc:
        type: string
  UserAccountRights:
    type: object
    properties:
      isOwner:
        type: boolean
      isAdmin:
        type: boolean
      isTransfer:
        type: boolean
      isRead:
        type: boolean