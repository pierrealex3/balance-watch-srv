/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.pa.balance.client.api;

import org.pa.balance.client.model.Board;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-04-08T17:12:10.402735-04:00[America/New_York]")

@Validated
@Api(value = "transactionBoard", description = "the transactionBoard API")
public interface TransactionBoardApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /transactionBoard/{year}/{month}
     *
     * @param year  (required)
     * @param month  (required)
     * @return Success (status code 200)
     *         or Invalid year/month supplied (status code 400)
     *         or Board not found (status code 404)
     */
    @ApiOperation(value = "", nickname = "transactionBoardYearMonthGet", notes = "", response = Board.class, tags={ "transaction board", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Board.class),
        @ApiResponse(code = 400, message = "Invalid year/month supplied"),
        @ApiResponse(code = 404, message = "Board not found") })
    @RequestMapping(value = "/transactionBoard/{year}/{month}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Board> transactionBoardYearMonthGet(@ApiParam(value = "",required=true) @PathVariable("year") Integer year,@Min(1) @Max(12) @ApiParam(value = "",required=true) @PathVariable("month") Integer month) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"month\" : 1, \"year\" : 6, \"startAmt\" : 5.962133916683182, \"id\" : 0, \"account\" : \"account\" }";
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
